@page "/edit-customer/{Id:int}"

@using CRM.DTOs.CustomerDTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;

@if (isSuccess == false && isError==false)
{
    <h3>Modificar Cliente</h3>

   @*  <EditForm Model="customer" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="Name">Nombre:</label>
            <InputText class="form-control" id="Name" @bind-Value="customer.Name" />
            <ValidationMessage For="() => customer.Name" />
        </div>
        <div class="form-group">
            <label for="LastName">Apellido:</label>
            <InputText class="form-control" id="LastName" @bind-Value="customer.LastName" />
            <ValidationMessage For="() => customer.LastName" />
        </div>
        <div class="form-group">
            <label for="Address">Dirección:</label>
            <InputText class="form-control" id="Address" @bind-Value="customer.Address" />
            <ValidationMessage For="() => customer.Address" />
        </div>
        <button type="submit" class="btn btn-primary">Modificar</button>
    </EditForm> *@
}else if (isSuccess)
{
    customer = new EditCustomerDTO();
    isError = false;
    <p class="alert alert-success">Cliente se modifico con éxito.</p>
    <button type="button" @onclick="HandleIrACrear">Ir a ver clientes</button>
}
else if (isError)
{
    <p class="alert alert-success">sucedio un error al intentar modificar.</p>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private EditCustomerDTO customer = new EditCustomerDTO();
    private bool isSuccess = false;
    private bool isError = false;
    private HttpClient _httpClientCRMAPI;
    [Inject]
    private IHttpClientFactory httpClientFactory { get; set; }    
    private async Task HandleValidSubmit()
    {
        _httpClientCRMAPI = httpClientFactory.CreateClient("CRMAPI");
        var result = 0;
        var response = await _httpClientCRMAPI.PutAsJsonAsync("/customer/"+customer.Id, customer);
        if (response.IsSuccessStatusCode)
        {
            var responseBody = await response.Content.ReadAsStringAsync();
            if (int.TryParse(responseBody, out result) == false)
                result = 0;
        }
        if (result != 0)
        {
            isSuccess = true;
        }
        else
        {
            isError = true;
        }
    }
    private void HandleIrACrear()
    {
        isSuccess = false;
        isError = false;
    }
}
